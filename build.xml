<?xml version="1.0" encoding="UTF-8"?>

<project name="TestJenkins" default="ci" basedir="./">


<!--<property name="source" value="jenkins_test/workspace"/>-->

    <target name="ci"
        description="Tâche principale d'intégration continue"
        depends="clean,qa"
    />



<target name="clean" description="Vide les répertoires d'artefacts">
    <delete dir="${project.basedir}/build/api" />
    <delete dir="${project.basedir}/build/code-browser" />
    <delete dir="${project.basedir}/build/coverage" />
    <delete dir="${project.basedir}/build/logs" />
    <delete dir="${project.basedir}/build/pdepend" />

    <mkdir dir="${project.basedir}/build/api" />
    <mkdir dir="${project.basedir}/build/code-browser" />
    <mkdir dir="${project.basedir}/build/coverage" />
    <mkdir dir="${project.basedir}/build/logs" />
    <mkdir dir="${project.basedir}/build/pdepend" />
</target>



<!--Notez que si vous utilisez phpdox, Phing fourni aussi une tâche <docblox> ;-)-->
 <target name="qa" description="Lance les outils d'analyse">
    <phingcall target="pdepend" />
    <phingcall target="phpmd" />
 <phingcall target="phpcpd" />
    <phingcall target="phploc" />
    <phingcall target="phpcs" />
    <phingcall target="phpdoc" />
 <phingcall target="phpunit" />
    <phingcall target="phpcbf" />
    <phingcall target="phpcb" />
</target>


<target name="pdepend">
    <phpdepend file="${project.basedir}">
        <logger type="jdepend-xml" outfile="${project.basedir}/build/logs/jdepend.xml" />
        <logger type="jdepend-chart" outfile="${project.basedir}/build/pdepend/dependencies.svg" />
        <logger type="overview-pyramid" outfile="${project.basedir}/build/pdepend/overview-pyramid.svg" />
    </phpdepend>
</target>




<target name="phpmd" description="Generate pmd.xml using PHPMD">
		<exec logoutput="true" spawn="true" command="phpmd ${project.basedir} xml codesize,design,naming,unusedcode --reportfile ${project.basedir}/build/phpmd.xml" />
	</target>


<target name="phpcpd" description="Find duplicate code using PHPCPD">
    <exec executable="phpcpd">
        <arg value="--log-pmd" />
        <arg value="${project.basedir}/build/logs/pmd-cpd.xml" />
        <arg path="${project.basedir}" />
    </exec>

    <echo msg="${project.basedir}" />
</target>





<target name="phploc">
    <exec logoutput="true" dir="${project.basedir}" command="phploc --log-csv '${project.basedir}/build/logs/phploc.csv' '${project.basedir}'" escape="false" />
</target>



<target name="phpcs">
    <phpcodesniffer standard="Zend">
        <fileset dir="${project.basedir}">
            <include name="**/*.php"/>
        </fileset>
        <formatter type="checkstyle" outfile="${project.basedir}/build/logs/checkstyle.xml"/>
    </phpcodesniffer>
</target>



<target name="phpdoc">
    <phpdoc title="API Documentation"
            destdir="${project.basedir}/build/api"
            sourcecode="false"
            output="HTML:Smarty:PHP">
        <fileset dir="${project.basedir}">
            <include name="**/*.php"/>
        </fileset>
        <projdocfileset dir=".">
            <include name="README"/>
            <include name="INSTALL"/>
            <include name="CHANGELOG"/>
        </projdocfileset>
    </phpdoc>
</target>

<target name="phpunit">
    <exec logoutput="true" dir="${project.basedir}/tests" command="phpunit" escape="false"/>
</target>

<target name="phpcbf">
 <exec executable="phpcbf" logoutput="true">
            <arg value="--tabWidth=4"/>
            <arg value="--standard=PSR2"/>
            <arg value="--extensions=php"/>
            <arg value="--ignore=autoload.php"/>
            <arg path="${project.basedir}"/>
            <arg path="${project.basedir}/build/code-browser"/>
        </exec>
</target>


<target name="phpcb">
    <exec logoutput="true" command="phpcb --log '${project.basedir}/build/logs' --source '${project.basedir}' --output '${project.basedir}/build/code-browser'" escape="false" />
</target>



</project>
